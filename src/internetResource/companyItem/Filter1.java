// Generated by FilterBuilder. http://htmlparser.org
// [aced0005737200206f72672e68746d6c7061727365722e66696c746572732e416e6446696c74657225a77ce23aa3c4110200015b000b6d5072656469636174657374001c5b4c6f72672f68746d6c7061727365722f4e6f646546696c7465723b78707572001c5b4c6f72672e68746d6c7061727365722e4e6f646546696c7465723b8f17479b1d5f7992020000787000000003737200246f72672e68746d6c7061727365722e66696c746572732e5461674e616d6546696c746572b28b2601a614890f0200014c00056d4e616d657400124c6a6176612f6c616e672f537472696e673b78707400025444737200276f72672e68746d6c7061727365722e66696c746572732e4861735369626c696e6746696c746572eb4819a7c54a9a2b0200014c000e6d5369626c696e6746696c74657274001b4c6f72672f68746d6c7061727365722f4e6f646546696c7465723b78707371007e00007571007e0003000000027371007e00057400025444737200256f72672e68746d6c7061727365722e66696c746572732e4861734368696c6446696c7465720d33e5cd9f31450e0200025a000a6d5265637572736976654c000c6d4368696c6446696c74657271007e000a787000737200236f72672e68746d6c7061727365722e66696c746572732e537472696e6746696c74657207df2adf4bd4ef0c0200045a000e6d4361736553656e7369746976654c00076d4c6f63616c657400124c6a6176612f7574696c2f4c6f63616c653b4c00086d5061747465726e71007e00064c000d6d55707065725061747465726e71007e0006787000737200106a6176612e7574696c2e4c6f63616c657ef811609c30f9ec02000449000868617368636f64654c0007636f756e74727971007e00064c00086c616e677561676571007e00064c000776617269616e7471007e00067870ffffffff7400024b527400026b6f74000074000beca285eab08028ec9b902971007e001a737200206f72672e68746d6c7061727365722e66696c746572732e4e6f7446696c7465724e8d5605e3e306020200014c000a6d50726564696361746571007e000a78707371007e0010017371007e00120071007e001674000beca285eab08028ec9b902971007e001f]

package internetResource.companyItem;

import org.htmlparser.NodeFilter;
import org.htmlparser.Parser;
import org.htmlparser.filters.AndFilter;
import org.htmlparser.filters.HasChildFilter;
import org.htmlparser.filters.HasSiblingFilter;
import org.htmlparser.filters.NotFilter;
import org.htmlparser.filters.StringFilter;
import org.htmlparser.filters.TagNameFilter;
import org.htmlparser.util.NodeList;
import org.htmlparser.util.ParserException;

public class Filter1
{
	public NodeList getContent(Parser parser, String title) throws ParserException {
		parser.reset();
        TagNameFilter filter0 = new TagNameFilter ();
        filter0.setName ("TD");
        TagNameFilter filter1 = new TagNameFilter ();
        filter1.setName ("TD");
        StringFilter filter2 = new StringFilter ();
        filter2.setCaseSensitive (false);
        filter2.setLocale (new java.util.Locale ("ko", "KR", ""));
        filter2.setPattern (title);
        HasChildFilter filter3 = new HasChildFilter ();
        filter3.setRecursive (false);
        filter3.setChildFilter (filter2);
        NodeFilter[] array0 = new NodeFilter[2];
        array0[0] = filter1;
        array0[1] = filter3;
        AndFilter filter4 = new AndFilter ();
        filter4.setPredicates (array0);
        HasSiblingFilter filter5 = new HasSiblingFilter ();
        filter5.setSiblingFilter (filter4);
        StringFilter filter6 = new StringFilter ();
        filter6.setCaseSensitive (false);
        filter6.setLocale (new java.util.Locale ("ko", "KR", ""));
        filter6.setPattern (title);
        HasChildFilter filter7 = new HasChildFilter ();
        filter7.setRecursive (true);
        filter7.setChildFilter (filter6);
        NotFilter filter8 = new NotFilter ();
        filter8.setPredicate (filter7);
        NodeFilter[] array1 = new NodeFilter[3];
        array1[0] = filter0;
        array1[1] = filter5;
        array1[2] = filter8;
        AndFilter filter9 = new AndFilter ();
        filter9.setPredicates (array1);
        NodeList list = parser.parse(filter9);
        
        //System.out.println( "title:" + title + "-count[" + list.size() + "]");
        return list;
	}

}
